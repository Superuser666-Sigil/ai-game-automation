[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-game-automation"
version = "2.0.0"
description = "Behavior cloning system for game automation using CNN-LSTM architecture"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "AI Game Automation Team", email = "team@ai-game-automation.com"}
]
maintainers = [
    {name = "AI Game Automation Team", email = "team@ai-game-automation.com"}
]
keywords = ["ai", "automation", "behavior-cloning", "gaming", "neural-networks", "pytorch"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Games/Entertainment",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "numpy>=1.21.0",
    "opencv-python>=4.8.0",
    "scikit-learn>=1.3.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.12.0",
    "pynput>=1.7.6",
    "mss>=9.0.1",
    "Pillow>=9.0.0",
    "psutil>=5.9.0",
    "tensorboard>=2.13.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "flake8>=6.0.0",
    "pytest>=7.0.0",
]
gpu = [
    "torch>=2.0.0",
    "torchvision>=0.15.0",
]

[project.scripts]
record-data = "ai_game_automation.record_data:main"
train-model = "ai_game_automation.train_model:main"
run-inference = "ai_game_automation.run_inference:main"
debug-model = "ai_game_automation.debug_model:main"

[project.urls]
Homepage = "https://github.com/yourusername/ai-game-automation"
Documentation = "https://github.com/yourusername/ai-game-automation#readme"
Repository = "https://github.com/yourusername/ai-game-automation"
"Bug Tracker" = "https://github.com/yourusername/ai-game-automation/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["ai_game_automation*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py38"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long, handled by black
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    "env",
    ".env"
] 